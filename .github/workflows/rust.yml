on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    name: Build and run tests
    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always
      SQLX_OFFLINE: true
      DATABASE_URL: "postgres://postgres:pwd@localhost:5432/"
      SCCACHE_GHA_ENABLED: true
      RUSTC_WRAPPER: sccache

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: pwd
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Build
        run: cargo build --all-targets

      - name: Run tests
        run: cargo test

  build-and-push-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
